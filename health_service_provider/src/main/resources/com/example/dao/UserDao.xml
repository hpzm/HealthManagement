<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.UserDao">

    <select id="findByUsername" parameterType="string" resultType="com.example.pojo.User">
        select *
        from t_user
        where username = #{username}
    </select>

    <insert id="add" parameterType="com.example.pojo.User">
        <!--通过mybatis框架提供的selectKey标签获得自增产生的ID值-->
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_user(gender,username,password,remark,telephone)
        values
        (#{gender},#{username},#{password},#{remark},#{telephone})
    </insert>


    <!--设置检查组和检查项多对多关系-->
    <insert id="setUserAndRole" parameterType="map">
        insert into t_user_role(user_id, role_id)
        values (#{userId}, #{roleId})
    </insert>

    <!--根据条件进行查询-->
    <select id="findByCondition" parameterType="string" resultType="com.example.pojo.User">
        select * from t_user
        <if test="value != null and value.length > 0">
            where username = #{value} or telephone = #{value}
        </if>
    </select>

    <!--根据ID查询-->
    <select id="findById" parameterType="int" resultType="com.example.pojo.User">
        select *
        from t_user
        where id = #{id}
    </select>

    <!--根据检查组ID查询关联的多个检查项ID，查询中间关系表-->
    <select id="findroleIdsByCheckUserId" parameterType="int" resultType="int">
        select role_id
        from t_user_role
        where user_id = #{id}
    </select>

    <!--根据ID动态修改检查组相关字段-->
    <update id="edit" parameterType="com.example.pojo.User">
        update t_user
        <set>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="telephone != null">
                telephone = #{telephone},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--根据检查组ID清理关联的检查项信息，操作的表t_checkgroup_checkitem-->
    <delete id="deleteAssocication" parameterType="int">
        delete
        from t_user_role
        where user_id = #{id}
    </delete>


    <delete id="deleteById" parameterType="int">
        DELETE
        FROM t_user
        WHERE id = #{id}
    </delete>

</mapper>